// Topic: Functions
//
// Program requirements:
// * Displays your first and last name
//
// Notes:
// * Use a function to display your first name
// * Use a function to display your last name
// * Use the println macro to display messages to the terminal

// Тема: Функции
//
// Требования к программе:
// * Отображает ваше имя и фамилию
//
// Примечания:
// * Используйте функцию для отображения вашего имени.
// * Используйте функцию для отображения вашей фамилии
// * Используйте макрос println для вывода сообщений на терминал.

fn t1000() {
    println!("Dionis");
}

fn t100() {
    println!("Ionesko")
}
// как это выглядит графически 
// https://skrinshoter.ru/sPe9EPtQ0hI

fn main() {
    t1000(); // мы также можем поместить в скобки параметры
    t100(); // то есть значения для их обработки функцией 
}

// создаем функцию где принимаемые и выходное значения i32
// fn add(a: i32, b: i32) -> i32 {
//     a + b
// }

// // то есть переменная x равна выходному значению функции выше
// // так как мы используем имя функции и передаем значения
// // в скобках для того чтобы функция произвела с ними необходимые нам действия
// let x = add(1, 1);
// let y = add(3, 0); // здесь 3 потому что 3 + 0 через функцию выше a + b равно 3
// // далее мы можем поставить значение x которое мы получили выше через функцию add 
// // то есть функция отработает 2 раза в этой связке 
// let z = add(x, 1); // будет 3 потому что x = 2

// ; точка с запятой говорит программе двигаться далее
// мы ставим :? тем самым включая отладочную печать текста не предназначенного для конечного пользователя или продакшна
// println!("{x}");

// let life = 38;
// println!("{:?}", life);

// // так тоже можно 
// println!("{:?} {:?}", life, life);
// // также можно ставить имя переменной прямо в фигурные скобки в связке с отладочной печатью 
// println!("{life:?}");
// // либо так 
// println!("{life}");
// это значит что мы выводим пользовательское отображение 
// то есть :? это отладка для программиста 
// а без :? это для пользователя для продакшна 
// перед продакшном просто убираем отовсюду :?
// слушай - а получается что ; точка с запятой говорит программе что это выражение закончено и нужно двигаться далее - и получается что если у функции за фигурными скобками нет точки с запятой ; то это говорит компилятору что это выражение не закончено, а может быть закончено в дальнейшем и если кстати получается компилятор видит неиспользуемые функции, то есть без продолжения за отсутствием точки с запятой ; у функции 

// let x = 99;
// if x > 99 {
//     if x > 200 {
//         println!("big")
//     } else {
//         println!("norm")
//     }
// } else { 
//     println!("small")
// }

// вот как графически работает if else
// https://skrinshoter.ru/sPdY3SrH1h5

// let a = 99;
// if a > 200 {
//     println!("hard");
// } else if a > 99 {
//     println!("medium");
// } else {
//     println!("easy");
// }

// кода выполняется строка за строкой, но можно это изменить оператором if 