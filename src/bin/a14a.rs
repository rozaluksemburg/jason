
// вот обрати внимание на подробность, въедливость и суть комментариев
use std::io;

fn main() {

let mut compound = String::new();

compound.push_str("Рад, что вы теперь с нами, ");

// делаем пустую строку, чтобы было место в памяти для будущего ввода пользователя
let mut name_smoker = String::new();
// далее непосредственный ввод пользователя 
io::stdin().read_line(&mut name_smoker).expect("упс - попробуйте еще");
// то есть сам момент ввода происходит на &mut name_smoker где и происходит магия превращения ввода в символы
// на экране при помощи метода read_line из библиотеки io 
// смысл в том, что ввод от юзера принимает переменная name_smoker потому что она изменяемая mut и на нее
// стоит ссылка в методе ввода от пользователя
// то есть ввод теперь в переменной name_smoker 

// далее объявляем уже неизменяемую переменную name_smoker
// и заключаем туда ввод пользователя в виде переменной name_smoker 
// очищаем его от символа новой строки, который добавляет метод ввода read_line, 
// очищаем при помощи метода trin() 
// и далее при помощи метода to_string() превращаем очищенный ввод пользователя в строковое значение или в строку
let name_smoker = name_smoker.trim().to_string();

// метод print_str прибавляет к значению compaund 
// значение ввода пользователя путем добавления в качестве аргумента ссылку на переменную &name_smoker
// то есть -- Рад, что вы теперь с нами,+ ИМЯ ПОЛЬЗОВАТЕЛЯ
compound.push_str(&name_smoker);

// и далее таким же способом добавляем в конец еще одное строковое значение, образующее целую фразу с введенным именем пользователя посередине таким образом
compound.push_str(", добро пожаловать на нашу скромную плантацию!");
// Рад, что вы теперь с нами,+ ИМЯ ПОЛЬЗОВАТЕЛЯ + , добро пожаловать на нашу скромную плантацию!

// теперь вся фраза хранится в переменной compaund и неплохо было бы это проверить путем вывода на экран значения вышеупомянутой переменной compound таким образом
println!("{:?}", compound);

}